//
//  HomeInteractor.swift
//  Map Weather
//
//  Created by Artashes Noknok on 7/25/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol HomeBusinessLogic
{
    func doGetWeather(request: Home.Something.Request)
}

protocol HomeDataStore
{

}

class HomeInteractor: HomeBusinessLogic, HomeDataStore
{
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    let bag = DisposeBag()
    let dispossible = CompositeDisposable()
    
    // MARK: Do something
    
    func doGetWeather(request: Home.Something.Request)
    {
        worker = HomeWorker()
        presenter?.showLoader()
        
        _ = worker?.getWeatherInfo(lat: request.lat,
                                   lon: request.lon)
            .observe(on: MainScheduler.instance)
            .subscribe(onNext: { [weak self] (weather) in
                guard let strongSelf = self else { return }
                let response = Home.Something.Response(weatherModel: weather)
                strongSelf.presenter?.hideLoader()
                strongSelf.presenter?.presentSuccess(response: response)
            }, onError: { [weak self] (error) in
                guard let strongSelf = self else { return }
                strongSelf.presenter?.hideLoader()
                strongSelf.presenter?.presentError(error: "\(error.localizedDescription)")
                
            })
        dispossible.disposed(by:bag)
    }
}
